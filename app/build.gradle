import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'

def ahoyEnvFile = rootProject.file("ahoy.env");
def ahoyEnv = new Properties()
ahoyEnv.load(new FileInputStream(ahoyEnvFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "com.apollo29.ahoy"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode createVersionCode()
        versionName "$project.version"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        buildConfigField("String", "apikey", ahoyEnv['apikey'])
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    // unit tests
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    // google
    implementation('com.google.guava:guava:28.2-jre')
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.android.material:material:1.3.0-alpha03'

    // scanning
    implementation "androidx.camera:camera-camera2:1.0.0-beta11"
    implementation "androidx.camera:camera-lifecycle:1.0.0-beta11"
    implementation "androidx.camera:camera-view:1.0.0-alpha18"
    implementation 'com.google.mlkit:barcode-scanning:16.0.3'

    // androidx
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.navigation:navigation-fragment:2.3.1'
    implementation 'androidx.navigation:navigation-ui:2.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-reactivestreams:2.2.0"
    implementation 'androidx.preference:preference:1.1.1'
    implementation "androidx.security:security-crypto:1.0.0-rc03"
    implementation "androidx.security:security-identity-credential:1.0.0-alpha01"
    implementation "androidx.work:work-runtime:2.4.0"
    implementation "androidx.work:work-rxjava3:2.4.0"

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation 'androidx.test:core:1.3.0'

    // room
    implementation 'androidx.room:room-runtime:2.3.0-alpha03'
    implementation 'androidx.room:room-rxjava3:2.3.0-alpha03'
    annotationProcessor 'androidx.room:room-compiler:2.3.0-alpha03'

    // rx
    implementation 'io.reactivex.rxjava3:rxjava:3.0.4'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    // squareup
    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    // sqlite cipher
    implementation "net.zetetic:android-database-sqlcipher:4.4.0"
    implementation "androidx.sqlite:sqlite:2.1.0"

    // other
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.github.ibrahimsn98:SmoothBottomBar:1.7.6'
    implementation 'net.andreinc.mockneat:mockneat:0.3.8'
    implementation 'at.favre.lib:bcrypt:0.9.0'
    implementation 'androidmads.library.qrgenearator:QRGenearator:1.0.4'
    implementation 'com.google.zxing:core:3.4.0'
    implementation 'com.github.Ilhasoft:data-binding-validator:2.0.0'
    implementation "com.github.castorflex.smoothprogressbar:library:1.3.0"
    implementation "com.sergivonavi:materialbanner:1.2.0"
    implementation "com.opencsv:opencsv:3.7"
}

def createVersionCode(){
    def df = new SimpleDateFormat("yyMMddHHmm")
    df.setTimeZone(TimeZone.getTimeZone("de_CH"))
    def versionCode = df.format(new Date()).toInteger()
    println "#### createVersionCode: " + versionCode + " ####"

    return versionCode
}